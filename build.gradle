plugins {
    id 'java'
    id 'java-library'
    id 'maven'
    id 'maven-publish'
    id 'org.jetbrains.kotlin.jvm' version '1.3.71'
}

group = 'me.bristermitten'
version = '1.1-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
    maven { url = 'https://hub.spigotmc.org/nexus/content/groups/public/' }
    maven { url = 'https://oss.sonatype.org/content/groups/public/' }
    maven { url = 'https://jitpack.io' }
}

dependencies {
    api 'org.spigotmc:spigot-api:1.13.2-R0.1-SNAPSHOT'
    api 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    api 'org.jetbrains:annotations:19.0.0'

    testImplementation 'com.github.knightzmc:MockBukkit:8fb3f8a0f5ffa2edac8495247ca6b138fac34922'
    testImplementation 'junit:junit:4.13'
    testImplementation 'org.jetbrains.kotlin:kotlin-test'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'
    testImplementation 'org.mockito:mockito-core:2.26.0'

}


compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
    options.tags = ["apiNote", "implNote"]
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "https://repo.bristermitten.me/repository/maven-releases"
            def snapshotsRepoUrl = "https://repo.bristermitten.me/repository/maven-snapshots"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

            credentials {
                username project.hasProperty('mavenUser') ? mavenUser : System.env["MAVEN_USER"]
                password project.hasProperty('mavenPassword') ? mavenPassword : System.env["MAVEN_PASSWORD"]
            }
        }
    }
}
